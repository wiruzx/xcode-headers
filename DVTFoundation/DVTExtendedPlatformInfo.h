//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//


@interface DVTExtendedPlatformInfo : NSObject
{
    BOOL _profileCreationRequiresProvisioningProfilePlatform;
    BOOL _devicesCanBeRegistered;
    BOOL _requiresPortalAppGroups;
    BOOL _requiresExplicitAppIDForGameCenter;
    BOOL _requiresLocalGameCenterEntitlement;
    BOOL _devicesEligibleOnlyIfRunnableMatchesPlatform;
    BOOL _prefersModelSpecificSupportDirectories;
    BOOL _ignoreDevices;
    BOOL _requiresTestDaemonMediationForTestHostConnection;
    NSString *_platformIdentifier;
    NSString *_provisioningProfilePlatform;
    NSString *_portalDeviceClass;
    NSArray *_provisioningProfileUTIs;
    NSString *_portalPlatformIdentifier;
    NSString *_developerProgramUserDescription;
    NSArray *_supportedCertificateKindNames;
    NSString *_correspondingDevicePlatformIdentifier;
    NSString *_correspondingSimulatorPlatformIdentifier;
    NSString *_minimumVersionForAnalytics;
    NSString *_minimumOSForDeviceSupport;
    NSString *_additionalBuiltProductsDirName;
    NSString *_additionalBuiltProductsDirExpression;
    NSString *_minimumOSForDownloadableSymbols;
    NSString *_defaultCodeSignIdentity;
    NSString *_productCategoryIdentifier;
    NSString *_minimumOSForASANWithoutDyldInsertLibrary;
    NSString *_minimumOSForXPCServiceDebugging;
    NSString *_minimumOSForUnhostedXPCServiceDebugging;
    NSString *_minimumOSForTestManagerDaemon;
    NSString *_minimumOSForRecordedFrames;
    NSString *_minimumOSForBackgroundFetchEvents;
    NSNumber *_machOMinOSLoadCommand;
    NSString *_analyticsPlatformIdentifier;
}

+ (id)extendedPlatformInfoForPlatformIdentifier:(id)arg1 error:(id *)arg2;
+ (id)extendedPlatformInfoForPlatformIdentifier:(id)arg1;
@property(readonly) NSString *analyticsPlatformIdentifier; // @synthesize analyticsPlatformIdentifier=_analyticsPlatformIdentifier;
@property(readonly) NSNumber *machOMinOSLoadCommand; // @synthesize machOMinOSLoadCommand=_machOMinOSLoadCommand;
@property(readonly) BOOL requiresTestDaemonMediationForTestHostConnection; // @synthesize requiresTestDaemonMediationForTestHostConnection=_requiresTestDaemonMediationForTestHostConnection;
@property(readonly) NSString *minimumOSForBackgroundFetchEvents; // @synthesize minimumOSForBackgroundFetchEvents=_minimumOSForBackgroundFetchEvents;
@property(readonly) NSString *minimumOSForRecordedFrames; // @synthesize minimumOSForRecordedFrames=_minimumOSForRecordedFrames;
@property(readonly) NSString *minimumOSForTestManagerDaemon; // @synthesize minimumOSForTestManagerDaemon=_minimumOSForTestManagerDaemon;
@property(readonly) NSString *minimumOSForUnhostedXPCServiceDebugging; // @synthesize minimumOSForUnhostedXPCServiceDebugging=_minimumOSForUnhostedXPCServiceDebugging;
@property(readonly) NSString *minimumOSForXPCServiceDebugging; // @synthesize minimumOSForXPCServiceDebugging=_minimumOSForXPCServiceDebugging;
@property(readonly) NSString *minimumOSForASANWithoutDyldInsertLibrary; // @synthesize minimumOSForASANWithoutDyldInsertLibrary=_minimumOSForASANWithoutDyldInsertLibrary;
@property(readonly) NSString *productCategoryIdentifier; // @synthesize productCategoryIdentifier=_productCategoryIdentifier;
@property(readonly) BOOL ignoreDevices; // @synthesize ignoreDevices=_ignoreDevices;
@property(readonly) NSString *defaultCodeSignIdentity; // @synthesize defaultCodeSignIdentity=_defaultCodeSignIdentity;
@property(readonly) NSString *minimumOSForDownloadableSymbols; // @synthesize minimumOSForDownloadableSymbols=_minimumOSForDownloadableSymbols;
@property(readonly) BOOL prefersModelSpecificSupportDirectories; // @synthesize prefersModelSpecificSupportDirectories=_prefersModelSpecificSupportDirectories;
@property(readonly) BOOL devicesEligibleOnlyIfRunnableMatchesPlatform; // @synthesize devicesEligibleOnlyIfRunnableMatchesPlatform=_devicesEligibleOnlyIfRunnableMatchesPlatform;
@property(readonly) NSString *additionalBuiltProductsDirExpression; // @synthesize additionalBuiltProductsDirExpression=_additionalBuiltProductsDirExpression;
@property(readonly) NSString *additionalBuiltProductsDirName; // @synthesize additionalBuiltProductsDirName=_additionalBuiltProductsDirName;
@property(readonly) NSString *minimumOSForDeviceSupport; // @synthesize minimumOSForDeviceSupport=_minimumOSForDeviceSupport;
@property(readonly) NSString *minimumVersionForAnalytics; // @synthesize minimumVersionForAnalytics=_minimumVersionForAnalytics;
@property(readonly) NSString *correspondingSimulatorPlatformIdentifier; // @synthesize correspondingSimulatorPlatformIdentifier=_correspondingSimulatorPlatformIdentifier;
@property(readonly) NSString *correspondingDevicePlatformIdentifier; // @synthesize correspondingDevicePlatformIdentifier=_correspondingDevicePlatformIdentifier;
@property(readonly) NSArray *supportedCertificateKindNames; // @synthesize supportedCertificateKindNames=_supportedCertificateKindNames;
@property(readonly) BOOL requiresLocalGameCenterEntitlement; // @synthesize requiresLocalGameCenterEntitlement=_requiresLocalGameCenterEntitlement;
@property(readonly) BOOL requiresExplicitAppIDForGameCenter; // @synthesize requiresExplicitAppIDForGameCenter=_requiresExplicitAppIDForGameCenter;
@property(readonly) BOOL requiresPortalAppGroups; // @synthesize requiresPortalAppGroups=_requiresPortalAppGroups;
@property(readonly) NSString *developerProgramUserDescription; // @synthesize developerProgramUserDescription=_developerProgramUserDescription;
@property(readonly) NSString *portalPlatformIdentifier; // @synthesize portalPlatformIdentifier=_portalPlatformIdentifier;
@property(readonly) NSArray *provisioningProfileUTIs; // @synthesize provisioningProfileUTIs=_provisioningProfileUTIs;
@property(readonly) NSString *portalDeviceClass; // @synthesize portalDeviceClass=_portalDeviceClass;
@property(readonly) BOOL devicesCanBeRegistered; // @synthesize devicesCanBeRegistered=_devicesCanBeRegistered;
@property(readonly) BOOL profileCreationRequiresProvisioningProfilePlatform; // @synthesize profileCreationRequiresProvisioningProfilePlatform=_profileCreationRequiresProvisioningProfilePlatform;
@property(readonly) NSString *provisioningProfilePlatform; // @synthesize provisioningProfilePlatform=_provisioningProfilePlatform;
@property(readonly) NSString *platformIdentifier; // @synthesize platformIdentifier=_platformIdentifier;
- (void).cxx_destruct;
@property(readonly) DVTPlatform *primaryPlatform;
@property(readonly) BOOL isSimulatorPlatform;
@property(readonly) DVTPlatform *correspondingSimulatorPlatform;
@property(readonly) DVTPlatform *correspondingDevicePlatform;
- (id)initWithExtension:(id)arg1;

@end