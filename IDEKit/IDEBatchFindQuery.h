//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//


@interface IDEBatchFindQuery : NSObject <DVTProgressReporting, DVTInvalidation>
{
    IDEWorkspace *_workspace;
    DVTDispatchLock *_queueLock;
    DVTDispatchLock *_stateLock;
    NSOperationQueue *_backgroundQueue;
    NSOperationQueue *_findQueue;
    NSDate *_startDate;
    NSDate *_completeDate;
    IDEBatchFindResultSet *_resultSet;
    long long _progress;
    int _state;
    DVTPerformanceMetric *_performanceMetric;
    id <IDEClientTrackingToken> _clientTrackingToken;
}

+ (unsigned long long)_backgroundQueueMaxWidth;
+ (id)newQueryWithCriteria:(id)arg1 forWorkspace:(id)arg2 inController:(id)arg3;
+ (void)initialize;
@property(readonly) IDEBatchFindResultSet *resultSet; // @synthesize resultSet=_resultSet;
@property(retain) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
@property long long progress; // @synthesize progress=_progress;
- (void).cxx_destruct;
@property int state; // @synthesize state=_state;
- (void)_transitionToFinishedState;
- (void)_transitionToCancelledState;
- (void)_transitionToExecutingState;
@property(readonly) BOOL isCancelled;
@property(readonly) BOOL shouldDisplayNotification;
@property(readonly) BOOL isComplete;
@property(readonly) BOOL isRunning;
@property(readonly) unsigned long long findQueueOperationCount;
- (void)addOperation:(id)arg1 toQueue:(int)arg2;
- (void)cancel;
- (void)start;
- (void)throttleBackgroundQueueWidthByFactor:(double)arg1;
- (void)setup;
@property(readonly) IDEBatchFindCriteria *criteria;
@property(readonly) DVTPerformanceMetric *performanceMetric;
- (void)primitiveInvalidate;
- (id)initWithSearchCriteria:(id)arg1 forWorkspace:(id)arg2 inController:(id)arg3;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end