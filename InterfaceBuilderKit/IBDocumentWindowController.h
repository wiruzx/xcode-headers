//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//


@interface IBDocumentWindowController : IBWindowController <NSOutlineViewDataSource, NSOutlineViewDelegate, NSBrowserDelegate>
{
    IBInvalidationPolicy *dataViewInvalidationPolicy;
    NSSegmentedControl *tabSwitchControl;
    NSSearchField *searchField;
    NSTabView *tabView;
    NSScrollView *rootObjectsScrollView;
    IBIconView *rootObjectsIconView;
    NSScrollView *objectOutlineScrollView;
    NSOutlineView *objectOutlineView;
    NSOutlineView *classOutlineView;
    NSBrowser *objectBrowserView;
    IBDocumentStatusContainer *statusAreaView;
    IBPulsingButton *synchronizationButton;
    IBStackView *statusStackView;
    IBDocumentInfoWindowController *nibInfoWindowController;
    IBCFMutableDictionary *filteredChildren;
    NSMutableDictionary *filteredClasses;
    NSString *filterString;
    NSString *lastNonOutlineMode;
    BOOL userChoseOutline;
    BOOL isCascading;
    BOOL appliedOutlineViewConfiguration;
    BOOL allowDirectDropInOutlineView;
    NSSet *previousSelection;
    NSTimer *statusMessageTimer;
    BOOL currentlyDisplayingCustomStatusMessage;
    BOOL shouldRespondToDataViews;
    BOOL ignoreBrowsersFieldEditorCommit;
}

+ (void)setMostRecentPreferredObjectViewMode:(id)arg1;
+ (id)preferedObjectViewModes;
+ (id)objectViewIdentifiers;
+ (id)unresponsiveSyncImage;
+ (id)disabledSyncImage;
+ (id)unavailableSyncImage;
+ (id)failedSyncImage;
+ (id)successfulSyncImage;
- (void)selectPreviousSibling:(id)arg1;
- (void)selectNextSibling:(id)arg1;
- (void)selectChild:(id)arg1;
- (void)selectParent:(id)arg1;
- (BOOL)canSelectSibling;
- (BOOL)canSelectChild;
- (BOOL)canSelectParent;
- (void)deselectObjects:(id)arg1;
- (id)selection;
- (void)selectObjectsByPossiblySwitchingModes:(id)arg1;
- (id)preferedObjectViewModeForSelectingObjects:(id)arg1;
- (BOOL)canSelectObjects:(id)arg1 inMode:(id)arg2;
- (void)selectObjectsIfPossible:(id)arg1 scrollToVisible:(BOOL)arg2 makeFirstResponder:(BOOL)arg3;
- (BOOL)outlineView:(id)arg1 acceptDrop:(id)arg2 item:(id)arg3 childIndex:(long long)arg4;
- (unsigned long long)outlineView:(id)arg1 validateDrop:(id)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (BOOL)outlineView:(id)arg1 writeItems:(id)arg2 toPasteboard:(id)arg3;
- (BOOL)control:(id)arg1 textShouldEndEditing:(id)arg2;
- (id)outlineView:(id)arg1 labelDefinitionForItem:(id)arg2;
- (void)outlineViewSelectionDidChange:(id)arg1;
- (void)outlineViewColumnDidMove:(id)arg1;
- (void)outlineViewColumnDidResize:(id)arg1;
- (void)outlineView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 byItem:(id)arg4;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (BOOL)outlineView:(id)arg1 shouldEditTableColumn:(id)arg2 item:(id)arg3;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (double)outlineView:(id)arg1 heightOfRowByItem:(id)arg2;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (void)outlineViewWillDraw:(id)arg1;
- (BOOL)classOutlineView:(id)arg1 textShouldEndEditing:(id)arg2;
- (void)classOutlineViewSelectionDidChange:(id)arg1;
- (void)classOutlineViewColumnDidMove:(id)arg1;
- (void)classOutlineViewColumnDidResize:(id)arg1;
- (void)classOutlineView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 byItem:(id)arg4;
- (BOOL)classOutlineView:(id)arg1 shouldEditTableColumn:(id)arg2 item:(id)arg3;
- (id)classOutlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (void)classOutlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (double)classOutlineView:(id)arg1 heightOfRowByItem:(id)arg2;
- (long long)classOutlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (id)classOutlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (BOOL)browser:(id)arg1 shouldEditItem:(id)arg2;
- (void)browser:(id)arg1 setObjectValue:(id)arg2 forItem:(id)arg3;
- (void)browserViewSelectionDidChange:(id)arg1;
- (void)browserColumnConfigurationDidChange:(id)arg1;
- (void)browser:(id)arg1 willDisplayCell:(id)arg2 atRow:(long long)arg3 column:(long long)arg4;
- (BOOL)browser:(id)arg1 isLeafItem:(id)arg2;
- (id)browser:(id)arg1 objectValueForItem:(id)arg2;
- (id)browser:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)browser:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (void)browserWillDraw:(id)arg1;
- (BOOL)objectOutlineView:(id)arg1 acceptDrop:(id)arg2 item:(id)arg3 childIndex:(long long)arg4;
- (unsigned long long)objectOutlineView:(id)arg1 validateDrop:(id)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (id)childGroupsOfObject:(id)arg1 atIndex:(long long)arg2;
- (struct _NSRange)rangeOfChildGroup:(id)arg1 ofObject:(id)arg2;
- (id)rangesForChildGroupsOfObject:(id)arg1;
- (BOOL)objectOutlineView:(id)arg1 writeItems:(id)arg2 toPasteboard:(id)arg3;
- (BOOL)objectOutlineView:(id)arg1 textShouldEndEditing:(id)arg2;
- (id)objectOutlineViewLabelDefinitionForItem:(id)arg1;
- (void)objectOutlineViewSelectionDidChange:(id)arg1;
- (void)objectOutlineViewColumnDidMove:(id)arg1;
- (void)objectOutlineViewColumnDidResize:(id)arg1;
- (void)objectOutlineView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 byItem:(id)arg4;
- (BOOL)objectOutlineView:(id)arg1 shouldEditTableColumn:(id)arg2 item:(id)arg3;
- (id)objectOutlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (void)objectOutlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (double)objectOutlineView:(id)arg1 heightOfRowByItem:(id)arg2;
- (long long)objectOutlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (id)objectOutlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (void)iconViewSelectionDidChange:(id)arg1;
- (BOOL)iconView:(id)arg1 shouldEditTitleForIconAtIndex:(long long)arg2;
- (BOOL)dragSelectionFromIconView:(id)arg1 inMouseDownEvent:(id)arg2 withMouseDraggedEvent:(id)arg3;
- (long long)numberOfObjectsInIconView:(id)arg1;
- (id)labelDefintionForObjectAtIndex:(long long)arg1 inIconView:(id)arg2;
- (id)imageForObjectAtIndex:(long long)arg1 inIconView:(id)arg2;
- (id)titleForObjectAtIndex:(long long)arg1 inIconView:(id)arg2;
- (void)setTitle:(id)arg1 forIconAtIndex:(long long)arg2 inIconView:(id)arg3;
- (id)toolTipForObjectAtIndex:(long long)arg1 inIconView:(id)arg2;
- (id)labelDefinitionForObject:(id)arg1;
- (id)filteredSubclassesOfClass:(id)arg1;
- (BOOL)filterClass:(id)arg1 intoDictionary:(id)arg2;
- (BOOL)objectPassesFilter:(id)arg1;
- (id)filteredChildrenOfObject:(id)arg1;
- (BOOL)filterChildren:(id)arg1 intoDictionary:(id)arg2;
- (BOOL)objectMatchesFilterString:(id)arg1;
- (BOOL)filterMatchesObject:(id)arg1 forTableColumn:(id)arg2;
- (BOOL)stringPassesFilter:(id)arg1;
- (void)reloadObjectsInBrowserView;
- (BOOL)shouldRespondToDataViews;
- (void)reloadObjects;
- (void)reloadClasses;
- (void)validateDataViews:(id)arg1;
- (void)invalidateDataViews;
- (void)updateUserDefaultsForObjectOutlineView;
- (void)toggleOutlineViewColumnVisibilityAction:(id)arg1;
- (id)availableTableColumnsForObjectOutlineView;
- (void)objectContainerDidChange;
- (void)noteObject:(id)arg1 didChangeProperty:(id)arg2 fromValue:(id)arg3;
- (void)openAssociatedProject:(id)arg1;
- (void)setLastNonOutlineMode:(id)arg1;
- (id)lastNonOutlineMode;
- (void)simulate:(id)arg1;
- (void)showNibInfo:(id)arg1;
- (void)doubleClickedObject:(id)arg1;
- (void)filter:(id)arg1;
- (void)cancelFilter:(id)arg1;
- (void)cancelFilterAndFlipBackToObjectMode:(id)arg1;
- (void)clearSearchAndSwitchModeTo:(id)arg1;
- (void)selectColumnViewMode:(id)arg1;
- (void)selectListViewMode:(id)arg1;
- (void)selectIconViewMode:(id)arg1;
- (void)selectTabFromSegmentedControl:(id)arg1;
- (void)switchToUserSelectedViewMode:(id)arg1;
- (void)selectTabWithIdentifier:(id)arg1;
- (void)applyFilter;
- (BOOL)isOutlineFilterInEffect;
- (void)setFilterString:(id)arg1;
- (id)acceptedDragTypes;
- (void)documentOrWindowChanged;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingEnded:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (void)dragTarget:(id)arg1 didAcceptDraggedObjects:(id)arg2 fromDragInfo:(id)arg3;
- (id)insertedChildrenFromDropOfDragInfo:(id)arg1 onTarget:(id)arg2;
- (long long)indexForDropFromDragInfo:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (id)initialDragImageState:(id)arg1;
- (id)draggedImageState:(id)arg1;
- (id)draggedImageStateForIdentifiedObjects:(id)arg1;
- (void)updateDragTargetIndicatorForObjectIconView:(id)arg1 operation:(unsigned long long)arg2;
- (long long)iconView:(id)arg1 validateDropTargetIndex:(long long)arg2 insertAfter:(char *)arg3;
- (long long)firstLegalTopLevelInsertionIndex;
- (id)springLoadedObjectAtPoint:(struct CGPoint)arg1;
- (BOOL)anyHeaderFiles:(id)arg1;
- (id)dropTargetForDragInfo:(id)arg1 allowedDraggingOperations:(unsigned long long *)arg2;
- (BOOL)dragInfo:(id)arg1 isInsideView:(id)arg2;
- (void)cut:(id)arg1;
- (void)deleteObjectsInIconView:(id)arg1;
- (void)delete:(id)arg1;
- (void)duplicate:(id)arg1;
- (void)pasteExcludingConnections:(id)arg1;
- (void)paste:(id)arg1;
- (void)performPasteExcludingConnections:(BOOL)arg1;
- (id)tellObject:(id)arg1 toAcceptPasteboard:(id)arg2 withContext:(id)arg3 excludingConnections:(BOOL)arg4 selectNewChildren:(BOOL)arg5;
- (void)copy:(id)arg1;
- (id)objectsToCopy;
- (id)objectsAtPoint:(struct CGPoint)arg1;
- (struct CGRect)visibleScreenRectForObject:(id)arg1;
- (struct CGRect)screenRectForObject:(id)arg1;
- (id)currentDocumentView;
- (void)documentWillClose:(id)arg1;
- (void)documentWillSave:(id)arg1;
- (void)setDocument:(id)arg1;
- (id)observedDocumentNotificationInfo;
- (void)stopObservingNotificationInfo:(id)arg1 forDocument:(id)arg2;
- (void)beginObservingNotificationInfo:(id)arg1 forDocument:(id)arg2;
- (id)concreteSelection;
- (BOOL)isObjectAnAbstractConcept:(id)arg1;
- (id)objectPasteboardType;
- (id)unsynchronizedObjectBrowserView;
- (id)synchronizedObjectBrowserView;
- (id)unsynchronizedRootObjectsIconView;
- (id)synchronizedRootObjectsIconView;
- (id)unsynchronizedObjectOutlineView;
- (id)synchronizedObjectOutlineView;
- (BOOL)viewingObjectBrowser;
- (BOOL)viewingObjectOutline;
- (BOOL)viewingObjectIcons;
- (id)objectViewMode;
- (id)tabViewItemForViewIdentifier:(id)arg1;
- (id)objectViewForViewIdentifier:(id)arg1;
- (void)selectionDidChange;
- (void)showWindow:(id)arg1;
- (void)verificationAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)presentVerificationWarningIfNeeded;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (id)captionForIdentifiedObject:(id)arg1;
- (BOOL)windowShouldClose:(id)arg1;
- (void)document:(id)arg1 shouldClose:(BOOL)arg2 context:(void *)arg3;
- (void)setWindow:(id)arg1;
- (struct CGRect)windowWillUseStandardFrame:(id)arg1 defaultFrame:(struct CGRect)arg2;
- (struct CGRect)windowFrameForTabViewSize:(struct CGSize)arg1;
- (void)resizeOutlineColumnsViewToBestSize;
- (struct CGSize)bestSizeForOutlineView;
- (struct CGSize)bestSizeForBrowserView;
- (struct CGSize)bestSizeForIconView;
- (void)takePreferredFrame;
- (void)windowDidResize:(id)arg1;
- (void)windowDidMove:(id)arg1;
- (void)projectSynchronizationStatusChanged;
- (id)imageForProjectSyncStatus:(long long)arg1;
- (void)synchronizeWindowTitleWithDocumentName;
- (id)windowTitleForDocumentDisplayName:(id)arg1;
- (void)awakeFromNib;
- (void)windowWillLoad;
- (void)warningsChanged;
- (void)flashProjectStatusMessage:(id)arg1 withImage:(id)arg2 tooltip:(id)arg3 forDuration:(double)arg4;
- (void)layoutProjectStatusSyncMessage;
- (void)projectStatusMessageTimeIsOver:(id)arg1;
- (void)documentManuallyIntegratedHeaderFiles:(id)arg1 withChanges:(id)arg2;
- (id)statusStringForAction:(id)arg1 classes:(id)arg2;
- (id)importFailedImage;
- (id)importSucceededImage;
- (void)configureBrowserView;
- (void)configureOutlineView;
- (void)configureIconView;
- (void)dealloc;
- (void)tearDownDataViews;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end